#!/bin/bash

# --- Command line
refname="$1"
oldrev="$2"
newrev="$3"

# --- Safety check
if [ -z "$GIT_DIR" ]; then
	echo "Don't run this script from the command line." >&2
	echo " (if you want, you could supply GIT_DIR then run" >&2
	echo "  $0 <ref> <oldrev> <newrev>)" >&2
	exit 1
fi

if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
	exit 1
fi

# --- Check types
# if $newrev is 0000...0000, it's a commit to delete a ref.
zero="0000000000000000000000000000000000000000"
if [ "$newrev" = "$zero" ]; then
	newrev_type=delete
else
	newrev_type=$(git cat-file -t $newrev)
fi

case "$refname","$newrev_type" in
	refs/heads/*,commit)
		# branch
		if [ "$oldrev" = "$zero" ]; then
			if [ "$refname" != "refs/heads/master" ]; then
				if [[ "$refname" =~ ^refs/heads/([a-zA-Z0-9_-]+)$ ]]; then
					echo "*** Creating a team: ${BASH_REMATCH[1]}"
					wget --method=PUT -bqO- http://whisper:3000/teams/${BASH_REMATCH[1]}
				else
					echo "*** Didn't like the team name :(" >&2
					exit 2
				fi
			fi
		fi
		;;
	refs/heads/*,delete)
		# delete branch
		if [[ "$refname" =~ ^refs/heads/(.+)$ ]]; then
			echo "*** Deleting a team: ${BASH_REMATCH[1]}"
			wget --method=DELETE -bqO- http://whisper:3000/teams/${BASH_REMATCH[1]}
		fi
		;;
esac

exit 0
